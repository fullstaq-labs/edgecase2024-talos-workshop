version: '3'

interval: 1s

tasks:
  default: task --list

  start-talos:
    silent: true
    desc: "Start the Talos docker containers"
    aliases: [up, 01]
    cmds:
    - clear
    - gum spin --show-error --title="Starting Talos containers..." -- docker-compose up -d
    - gum log --level=info "Talos containers started"

  stop-talos:
    silent: true
    aliases: [down]
    desc: "Stop the Talos docker containers"
    cmds:
    - clear
    - gum spin --show-error --title="Stopping Talos containers..." -- docker-compose down
    - gum log --level=info "Talos containers stopped"

  gen-config:
    silent: true
    desc: "Generate Talos config with the IP Address of the talos-cp container and Kubernetes version 1.29.7"
    aliases: [02]
    cmds:
    - clear
    - gum spin --show-error --title="Generate Talos Config..." -- talosctl gen config workshop https://{{.IP_CP}}:6443 --with-docs=false --with-examples=false --kubernetes-version=1.29.7 --force
    - gum log --level=info "Talos configuration created"
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  update-talosconfig:
    silent: true
    desc: "Updates the talosconfig with the IP Address of the talos-cp container"
    aliases: [03]
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - clear
    - gum log --level=info "Updating talosconfig file"
    - talosctl config endpoint {{.IP_CP}}
    - gum log --level=info "Added {{.IP_CP}} to the endpoint list"
    - talosctl config node {{.IP_CP}}
    - gum log --level=info "Added {{.IP_CP}} to the node list"
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  docker-patch:
    silent: true
    desc: "Creates a patch file for Talos to run in Docker"
    aliases: [04]
    cmds:
    - clear
    - |
      gum spin --show-error --title="Creating Talos patch for Docker..." -- \
      echo "machine:
        features:
          hostDNS:
            forwardKubeDNSToHost: true" > patch-docker.yaml
    - gum log --level=info "Talos config patch for Docker created"

  apply-config:
    silent: true
    desc: "Applies the Talos config to both containers 'talos-cp, talos-worker' based on there IP Address"
    aliases: [05]
    cmds:
    - clear
    - gum spin --show-error --title="Applying Talos Controlplane config..." -- sleep 5 && talosctl apply-config -f controlplane.yaml -n {{.IP_CP}} -p @patch-docker.yaml --insecure
    - gum log --level=info "Talos Controlplane config applied on {{.IP_CP}}"
    - gum spin --show-error --title="Applying Talos Worker config..." -- talosctl apply-config -f worker.yaml -n {{.IP_WRK}} -p @patch-docker.yaml --insecure
    - gum log --level=info "Talos Worker config applied on {{.IP_WRK}}"
    vars:
      IP_CP:
        sh: docker inspect talos-cp | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'
      IP_WRK:
        sh: docker inspect talos-worker | jq -r '.[].NetworkSettings.Networks."talos-workshop_talos-workshop".IPAddress'

  bootstrap:
    silent: true
    desc: "Bootstrap your Talos cluster"
    aliases: [06]
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - clear
    - gum spin --show-error --title="Waiting for Talos cluster to accept the bootstrap command..." -- sleep 10
    - gum log --level=info "Talos cluster ready. Start bootstrap."
    - gum spin --show-error --title="Bootstrapping Talos cluster..." -- talosctl bootstrap
    - talosctl health

  kubeconfig:
    silent: true
    desc: "Get kubeconfig file from your Talos cluster"
    aliases: [07]
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
    - clear
    - gum log --level=info "Downloading kubeconfig"
    - talosctl kubeconfig --force
    - gum log --level=info "Kubeconfig downloaded"
    - kubectl get nodes

##################################

  upgrade-talos:
    silent: true
    desc: "Upgrade your Talos version to 1.7.6"
    aliases: [08]
    env:
      TALOS_VERSION: 1.7.6
    cmds:
      - clear
      - gum log --level=info "Changing Talos version to $TALOS_VERSION"
      - sed -i 's/1.7.4/'"$TALOS_VERSION"'/g' compose.yaml 
      - |
        gum spin --show-error --title="Upgrading Controlplane..." -- \
        docker compose up -d talos-cp && gum log --level=info "Waiting for the Controlplane node to be Ready..." && while ! kubectl get nodes talos-cp -o jsonpath='{.status.nodeInfo.osImage}' 2> /dev/null | grep -q $TALOS_VERSION ; do sleep 5; done
      - gum log --level=info "Upgrade of Controlplane completed!"
      - |
        gum spin --show-error --title="Upgrading Worker..." -- \
        docker compose up -d talos-worker && gum log --level=info "Waiting for the Worker node to be Ready..." && while ! kubectl get nodes talos-worker -o jsonpath='{.status.nodeInfo.osImage}' 2> /dev/null | grep -q $TALOS_VERSION; do sleep 5; done
      - gum log --level=info "Upgrade of Worker completed!" 

  upgrade-k8s:
    silent: true
    desc: "Upgrade Kubernetes to version '1.30.3, 1.30.2, 1.30.1 or 1.30.0'"
    aliases: [09]
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
      - clear
      - echo "To which Kubernetes version do you want to upgrade?"
      - |
        K8S_VERSION=$(gum choose "1.30.3" "1.30.2" "1.30.1" "1.30.0") && \
        gum log --level=info "Started Kubernetes upgrade $K8S_VERSION" && \
        talosctl upgrade-k8s --to=$K8S_VERSION

  workload:
    silent: true
    desc: "Run workload"
    aliases: [10]
    env:
      TALOSCONFIG: ./talosconfig
    cmds:
      - clear
      - |
        gum log --level=info "Applying Workshop manifest"
        kubectl apply -f ./workload

##################################

  one-click-setup:
    silent: true
    desc: "Create a Talos cluster with one command"
    aliases: [ocs,aio,50]
    cmds:
      - clear
      - gum confirm --default "Are you sure you want to use the One-Click-Setup? This will RESET your Talos Workshop environment?"
      - task: reset-yolo
      - task: start-talos
      - task: gen-config
      - task: update-talosconfig   
      - task: docker-patch
      - task: apply-config
      - task: bootstrap
      - task: kubeconfig

  reset:
    silent: true
    desc: "Reset the Talos-Workshop with confimation"
    aliases: [98]
    cmds:
      - clear
      - gum confirm --default "Are you sure you want to RESET your Talos Workshop environment?" && task reset-yolo || exit 0

  reset-yolo:
    silent: true
    desc: "Reset the Talos-Workshop without confimation"
    aliases: [99]
    cmds:
      - clear
      - task: stop-talos
      - gum spin --title="Deleting Docker volumes..." -- docker volume rm $(docker volume ls --filter=name=talos -q) || true
      - gum log --level=info "Docker volumes deleted"
      - gum spin --show-error --title="Restoring original compose.yaml..." -- git restore compose.yaml
      - gum log --level=info "compose.yaml restored"
      - gum spin --show-error --title="Deleting Talos config..." -- rm -rf talosconfig controlplane.yaml worker.yaml patch-docker.yaml
      - gum log --level=info "Talos configuration deleted"

      